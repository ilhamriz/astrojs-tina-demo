---
import TableOfContentsHeading from './TableOfContentsHeading.astro'

const { headings } = Astro.props
type TableOfContent = {
	depth: number
	text: string
	slug: string
	subHeadings: TableOfContent[]
}

function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	let parentHeadings = new Map()

	headings.forEach((h) => {
		let heading = { ...h, subHeadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading)
		} else {
			parentHeadings.get(heading.depth - 1).subHeadings.push(heading)
		}
	})

	return toc
}
const toc = buildToc(headings)
---

<nav class='max-w-xs dark:text-black'>
	<h1 class='font-bold mb-3 text-2xl dark:text-white'>Index</h1>
	<ul class='[text-wrap:balance] flex flex-col gap-1'>
		{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
	</ul>
</nav>
